// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoFinal.Models;

#nullable disable

namespace ProjetoFinal.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20221205112835_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ProjetoFinal.Models.Consumidor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("dataNasc")
                        .HasColumnType("date");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("consumidor");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Pagamento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("pedidoId")
                        .HasColumnType("int");

                    b.Property<double>("valorTotal")
                        .HasColumnType("double");

                    b.HasKey("id");

                    b.HasIndex("pedidoId");

                    b.ToTable("pagamento");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Pagamento");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Pedido", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("consumidorId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("consumidorId");

                    b.ToTable("pedido");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Produto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Pedidoid")
                        .HasColumnType("int");

                    b.Property<string>("desc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("valor")
                        .HasColumnType("double");

                    b.HasKey("id");

                    b.HasIndex("Pedidoid");

                    b.ToTable("produto");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Boleto", b =>
                {
                    b.HasBaseType("ProjetoFinal.Models.Pagamento");

                    b.Property<int>("codigo")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Boleto");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Credito", b =>
                {
                    b.HasBaseType("ProjetoFinal.Models.Pagamento");

                    b.Property<int>("numero")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Credito");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Pagamento", b =>
                {
                    b.HasOne("ProjetoFinal.Models.Pedido", "pedido")
                        .WithMany()
                        .HasForeignKey("pedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pedido");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Pedido", b =>
                {
                    b.HasOne("ProjetoFinal.Models.Consumidor", "consumidor")
                        .WithMany()
                        .HasForeignKey("consumidorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("consumidor");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Produto", b =>
                {
                    b.HasOne("ProjetoFinal.Models.Pedido", null)
                        .WithMany("produtos")
                        .HasForeignKey("Pedidoid");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Pedido", b =>
                {
                    b.Navigation("produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
